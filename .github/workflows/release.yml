name: Build and Release
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
permissions:
  contents: write
jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y p7zip-full libx11-dev libxcb-shape0-dev
      - name: Get the release version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      - name: Build
        run: |
          echo "Starting Linux build"
          cargo build --verbose --release --target x86_64-unknown-linux-gnu || { echo "Linux build failed"; exit 1; }
          echo "Listing release directory:"
          ls -la target/x86_64-unknown-linux-gnu/release/ || echo "Linux release directory not found"
      - name: Build archive
        shell: bash
        run: |
          binary_name="clipboard-inverter"
          dirname="$binary_name-${{ env.VERSION }}-x86_64-unknown-linux-gnu"
          mkdir -p "$dirname"
          mv "target/x86_64-unknown-linux-gnu/release/$binary_name" "$dirname/" || { echo "Failed to move Linux binary"; exit 1; }
          tar -czf "$dirname.tar.gz" "$dirname/" || { echo "Failed to tar Linux archive"; exit 1; }
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: brew install p7zip
      - name: Get the release version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin
      - name: Build
        run: |
          echo "Starting macOS build"
          cargo build --verbose --release --target x86_64-apple-darwin || { echo "macOS build failed"; exit 1; }
          echo "Listing release directory:"
          ls -la target/x86_64-apple-darwin/release/ || echo "macOS release directory not found"
      - name: Build archive
        shell: bash
        run: |
          binary_name="clipboard-inverter"
          dirname="$binary_name-${{ env.VERSION }}-x86_64-apple-darwin"
          mkdir -p "$dirname"
          mv "target/x86_64-apple-darwin/release/$binary_name" "$dirname/" || { echo "Failed to move macOS binary"; exit 1; }
          tar -czf "$dirname.tar.gz" "$dirname/" || { echo "Failed to tar macOS archive"; exit 1; }
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install 7z
        run: choco install 7zip
      - name: Get the release version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - name: Build
        run: |
          echo "Starting Windows build"
          cargo build --verbose --release --target x86_64-pc-windows-msvc || { echo "Windows build failed"; exit 1; }
          echo "Listing release directory:"
          ls -la target/x86_64-pc-windows-msvc/release/ || echo "Windows release directory not found"
      - name: Build archive
        shell: bash
        run: |
          binary_name="clipboard-inverter"
          dirname="$binary_name-${{ env.VERSION }}-x86_64-pc-windows-msvc"
          mkdir -p "$dirname"
          mv "target/x86_64-pc-windows-msvc/release/$binary_name.exe" "$dirname/" || { echo "Failed to move Windows binary"; exit 1; }
          7z a "$dirname.zip" "$dirname/" || { echo "Failed to zip Windows archive"; exit 1; }
          echo "ASSET=$dirname.zip" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}
